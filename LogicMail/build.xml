<?xml version="1.0" encoding="UTF-8"?>
<!--
 Ant build file for the LogicMail application
-->
<project name="LogicMail" default="build" basedir=".">
  <!-- Properties -->
  <property name="src.dir" location="src"/>
  <property name="dist.dir" location="dist"/>
  <property name="dist.ota.dir" location="distota"/>
  <property name="dist.alx.dir" location="distalx"/>
  <property name="docs.dir" location="docs"/>
  <property name="startup.src.dir" location="../LogicMailStartup/src"/>
  <property name="bb470.src.dir" location="../LogicMail_BB47/src"/>
  <property file="project.properties"/>
  
  <!-- Task definitions -->
  <typedef resource="bb-ant-defs.xml" classpath="../lib/bb-ant-tools.jar" />
  <taskdef resource="net/sf/antcontrib/antcontrib.properties">
    <classpath>
      <pathelement location="../lib/ant-contrib-1.0b3.jar"/>
    </classpath>
  </taskdef>
  <taskdef name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask">
    <classpath>
      <pathelement location="../lib/xmltask.jar"/>
    </classpath>
  </taskdef>
  
  <macrodef name="build-platform">
    <attribute name="jdehome"/>
    <attribute name="platform"/>
    <attribute name="defines"/>
  	<attribute name="platformfileset"/>
    <sequential>
      <mkdir dir="${dist.dir}/@{platform}"/>
      <copy file="${src.dir}/icons/logicmail.png" todir="${dist.dir}/@{platform}"/>
      <rapc output="${module.name}"
            srcdir="${src.dir}"
            destdir="${dist.dir}/@{platform}"
            jdehome="@{jdehome}"
            defines="@{preprocessor}">
        <jdp title="${module.title}"
             vendor="${module.vendor}"
             version="${module.version}"
             type="cldc"
             midletclass="org.logicprobe.LogicMail.LogicMail"
             icon="logicmail.png"
             arguments="-build:${module.build}">
          <entry arguments="-build:${module.build} autostartup"
                 systemmodule="true"
                 runonstartup="true"
                 startuptier="7"/>
        </jdp>
        <src>
          <fileset dir="${src.dir}">
            <include name="**/*.java"/>
            <include name="**/*.rrc"/>
            <include name="**/*.rrh"/>
            <include name="**/*.png"/>
          </fileset>
          <fileset dir="${startup.src.dir}">
            <include name="**/*.java"/>
          </fileset>
          <fileset refid="@{platformfileset}" />
        </src>
      </rapc>
      <delete file="${dist.dir}/@{platform}/logicmail.png"/>
      <sleep milliseconds="${task.sleep}"/>
    </sequential>
  </macrodef>
  
  <!-- Build the application -->
  <target name="build">
    <if><isset property="jde421.home"/><then>
      <fileset id="bb421_fileset" dir="${src.dir}" />
      <build-platform jdehome="${jde421.home}" platform="BB421" defines="BLACKBERRY_4_2_1" platformfileset="bb421_fileset"/>
    </then></if>
    <if><isset property="jde470.home"/><then>
      <fileset id="bb470_fileset" dir="${bb470.src.dir}">
        <include name="**/*.java"/>
        <include name="**/*.png"/>
      </fileset>
      <build-platform jdehome="${jde470.home}" platform="BB470" defines="BLACKBERRY_4_7_0" platformfileset="bb470_fileset"/>
    </then></if>
  </target>

  <!-- Sign the application -->
  <target name="sign" depends="build" if="sigtool.password">
    <if><isset property="jde421.home"/><then>
      <sigtool jdehome="${jde421.home}"
               password="${sigtool.password}"
               forceclose="true"
               codfile="${dist.dir}/BB421/${module.name}.cod"/>
      <sleep milliseconds="${task.sleep}"/>
    </then></if>
    <if><isset property="jde470.home"/><then>
      <sigtool jdehome="${jde470.home}"
               password="${sigtool.password}"
               forceclose="true"
               codfile="${dist.dir}/BB470/${module.name}.cod"/>
      <sleep milliseconds="${task.sleep}"/>
    </then></if>
  </target>
  
  <!-- Build the code documentation -->
  <target name="javadoc" depends="build">
    <javadoc destdir="${docs.dir}"
             author="true"
             version="true"
             use="true"
             windowtitle="${module.description}">
      <fileset dir="${src.dir}">
        <include name="**/*.java"/>
      </fileset>
      <fileset dir="${startup.src.dir}">
        <include name="**/*.java"/>
      </fileset>
      <classpath>
        <pathelement path="${jde421.home}/lib/net_rim_api.jar"/>
        <pathelement path="${dist.dir}/BB421/${module.name}.jar"/>
      </classpath>
    </javadoc>
  </target>
  
  <!-- Build the desktop loader distribution -->
  <target name="dist-alx" depends="build">
    <mkdir dir="${dist.alx.dir}" />
	<alx destdir="${dist.alx.dir}" filename="${module.name}.alx">
      <application
          id="${module.name}"
          name="${module.title}"
          description="${module.description}"
          vendor="${module.vendor}"
          version="${module.version}"
      	  copyright="${module.copyright}">
      	<!--
          Since there is no easy way to conditionally define these elements,
          they will need to be manually edited if executing this task without
          all supported JDE versions defined.
      	-->
        <codset dir="BB421" greaterthanequal="4.2.1" lessthan="4.7.0">
          <fileset dir="${dist.dir}/BB421" includes="*.cod" />
        </codset>
        <codset dir="BB470" greaterthanequal="4.7.0">
          <fileset dir="${dist.dir}/BB470" includes="*.cod" />
        </codset>
      </application>
	</alx>
    <copy todir="${dist.alx.dir}">
      <fileset dir=".." includes="README.txt, LICENSE.txt, ChangeLog.txt"/>
    </copy>
    <sleep milliseconds="${task.sleep}"/>
  </target>
  
  <macrodef name="copy-ota-files">
    <attribute name="src"/>
    <attribute name="dest"/>
    <sequential>
      <mkdir dir="@{dest}"/>
      <delete failonerror="false"><fileset dir="@{dest}" includes="*.*"/></delete>
      <jadtool input="@{src}/${module.name}.jad" destdir="@{dest}">
        <fileset dir="@{src}" includes="*.cod" />
      </jadtool>
      <replaceregexp file="@{dest}/${module.name}.jad" match="MIDlet-Jar-URL(.*)\n" replace="" />
      <replaceregexp file="@{dest}/${module.name}.jad" match="MIDlet-Jar-Size(.*)\n" replace="" />
      <sleep milliseconds="${task.sleep}"/>
    </sequential>
  </macrodef>
  
  <target name="dist-ota" depends="build">
    <mkdir dir="${dist.ota.dir}/${module.version}"/>
    <xmltask dest="${dist.ota.dir}/download-entry.xml" outputter="simple:4">
      <insert path="/">
        <![CDATA[
          <downloads>
            <entry>
            </entry>
          </downloads>
        ]]> 
       </insert>
       <attr path="/downloads/entry" attr="name" value="${module.title} ${module.version}"/>
       <insert if="jde421.home" path="/downloads/entry">
         <![CDATA[
           <file name="${module.version}/BB421/${module.name}.jad" target="4.2.1"/>
         ]]>
      </insert>
      <insert if="jde470.home" path="/downloads/entry">
        <![CDATA[
          <file name="${module.version}/BB470/${module.name}.jad" target="4.7.0"/>
        ]]>
      </insert>
    </xmltask>
  	<sleep milliseconds="${task.sleep}"/>
    <if><isset property="jde421.home"/><then>
      <copy-ota-files src="${dist.dir}/BB421" dest="${dist.ota.dir}/${module.version}/BB421"/>
    </then></if>
    <if><isset property="jde470.home"/><then>
      <copy-ota-files src="${dist.dir}/BB470" dest="${dist.ota.dir}/${module.version}/BB470"/>
    </then></if>
  </target>
  
  <!-- Prepare the distribution -->
  <target name="dist" depends="dist-alx,dist-ota">
    <zip destfile="../LogicMail-${module.version}.zip">
      <fileset dir="${dist.alx.dir}" />
    </zip>
    <zip destfile="../LogicMail-ota-${module.version}.zip">
      <fileset dir="${dist.ota.dir}" />
    </zip>
  </target>
  
  <!-- Clean up -->
  <target name="clean">
    <delete dir="${dist.dir}"/>
    <delete dir="${dist.alx.dir}"/>
    <delete dir="${dist.ota.dir}"/>
    <delete dir="${docs.dir}"/>
  </target>
</project>
